definitions:
  dto.CommentRequest:
    properties:
      task_id:
        type: integer
      text:
        type: string
    type: object
  dto.CommentResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      task_id:
        type: integer
      text:
        type: string
      user_id:
        type: integer
    type: object
  dto.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.LoginResponse:
    properties:
      role:
        type: string
      token:
        type: string
    type: object
  dto.TaskRequest:
    properties:
      deadline:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      progress:
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
  dto.TaskResponse:
    properties:
      created_at:
        type: string
      deadline:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      id:
        type: integer
      progress:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  dto.UserRequest:
    properties:
      name:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  dto.UserResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/comments:
    get:
      parameters:
      - description: ID задачи
        in: query
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CommentResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить комментарии по task_id
      tags:
      - comments
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные комментария
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CommentResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать комментарий
      tags:
      - comments
  /api/v1/comments/{id}:
    delete:
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить комментарий
      tags:
      - comments
    get:
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CommentResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить комментарий по id
      tags:
      - comments
    put:
      consumes:
      - application/json
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Данные комментария
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить комментарий
      tags:
      - comments
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Получить JWT токен по username и password
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Логин пользователя
      tags:
      - auth
  /api/v1/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - users
  /api/v1/tasks:
    get:
      parameters:
      - description: ID сотрудника
        in: query
        name: employee_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.TaskResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить задачи по employee_id
      tags:
      - tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные задачи
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.TaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать задачу
      tags:
      - tasks
  /api/v1/tasks/{id}:
    delete:
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить задачу
      tags:
      - tasks
    get:
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить задачу по id
      tags:
      - tasks
    put:
      consumes:
      - application/json
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Данные задачи
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.TaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить задачу
      tags:
      - tasks
  /api/v1/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserResponse'
            type: array
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить всех пользователей
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить пользователя
      tags:
      - users
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить пользователя по id
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить пользователя
      tags:
      - users
swagger: "2.0"
